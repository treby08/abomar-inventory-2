<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="creationCompleteHandler(event)" xmlns:printViews="com.module.views.printViews.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:NumberFormatter id="numFmttr" precision="2" useThousandsSeparator="true"  />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.module.views.PaymentBox;
			import com.variables.AccessVars;
			
			import flash.utils.setTimeout;
			
			import flashx.textLayout.formats.WhiteSpaceCollapse;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.utils.TextFlowUtil;
			
			private var _salesBox:PaymentBox;
			private var _orderTypeText:String;
			private var _totWeight:Number = 0;
			
			public function set salesBox(value:PaymentBox):void{
				_salesBox = value;
			}
			public function set orderTypeText(value:String):void{
				_orderTypeText = value;
			}
			private function setData():void
			{
				transDate.text = _salesBox.setDateFormat(_salesBox.dfDate.selectedDate)//CurrentDateTimeString()
				poID.text = _salesBox.txtORNo.text
				//_salesBox.dg.variableRowHeight = true;
				
				var arrCol:ArrayCollection = new ArrayCollection();
				
				for each (var item:Object in (_salesBox.dg.dataProvider as ArrayCollection)){
					arrCol.addItem(item);
				}
				var rowH:Number = 23;
				for (var i:int = arrCol.length-1; i >=0; i--){
					trace("arrCol.getItemAt(i).totalAmt",arrCol.getItemAt(i).totalAmt)
					if (arrCol.getItemAt(i).totalAmt == "0.00"){
						arrCol.removeItemAt(i);
					}else if(arrCol.getItemAt(i).acctNo == undefined){
						trace("arrCol.getItemAt(i).tempAcctNo",arrCol.getItemAt(i).tempAcctNo);
						arrCol.getItemAt(i).acctNo = arrCol.getItemAt(i).tempAcctNo;
						arrCol.getItemAt(i).invID=undefined;
						arrCol.itemUpdated(arrCol.getItemAt(i));
					}
				}
				dg.dataProvider = arrCol;
				/*for each (var item:Object in arrCol){
					_totWeight+= Number(item.prodWeight);
					if(String(item.remarksName).length > 30)
						rowH = 46
				}*/
				dg.rowHeight = rowH;
				
				//txtWeight.text = String(_totWeight)+" kg";
				notFol.y = notFol.y + (rowH * arrCol.length);
				notFol.visible = true;
				
				txtSupplier.prompt="";
				txtSupplier.selectable = false;
				var contenttxtSupplier:String ="";// AccessVars.instance().mainSupplier;
				
				if (_salesBox.cmbCustomer.selectedItem.acctNo !=""){
					contenttxtSupplier = _salesBox.cmbCustomer.selectedItem.label+"\r"+_salesBox.cmbCustomer.selectedItem.address
						+"\r"+String(_salesBox.cmbCustomer.selectedItem.pNum).replace("|"," Ext. ")+"\r"+_salesBox.cmbCustomer.selectedItem.mNum+
						"\rTIN:"+_salesBox.cmbCustomer.selectedItem.tin
					
					txtTerm.text = AccessVars.instance().arrTerm.getItemAt(_salesBox.cmbCustomer.selectedItem.term).name;
				}
				txtSupplier.textFlow =TextFlowUtil.importFromString(contenttxtSupplier, WhiteSpaceCollapse.PRESERVE);
				
				var contentPayMode:String = "";
				if (_salesBox.txtCheckNo.text != ""){					
					contentPayMode = "Check No.:"+_salesBox.txtCheckNo.text+"\r"+
						"Bank:"+_salesBox.txtDrawBank.text+"\r"+
						"Check Amount: "+numFmttr.format(_salesBox.txtCheckAmt.text);
					
				}
				if (_salesBox.txtCash.text != "0.00"){
					contentPayMode +=contentPayMode==""?contentPayMode:"\r";
					contentPayMode += "Cash Amount: "+numFmttr.format(_salesBox.txtCash.text);
					
				}
				txtInvoiceTo.selectable = false;
				txtInvoiceTo.textFlow =TextFlowUtil.importFromString(contentPayMode, WhiteSpaceCollapse.PRESERVE);
				
				txtPrepBy.text = _salesBox.txtPrepBy.text;
				txtTotAmtPaid.text = _salesBox.txtTotAmt.text;
				txtTotal.text = _salesBox.txtTotAmt.text;
				//txtCheckBy.text = _salesBox.txtCheckBy.text;
				//trace("_salesBox.txtSupInvNo.text",_salesBox.txtSupInvNo.text)
				poID2.text = "OR No.: "+_salesBox.txtORNo.text;
				/*txtTotal.text = _salesBox.txtGT.text;
				txtSub.text = _salesBox.txtSubtot.text;
				txtVat.text = _salesBox.txtVat.text;
				*/
				
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				orderType.text = _orderTypeText;
				setData();
				
			}
			
			private function formatAmt(item:Object, column:GridColumn):String{
				return numFmttr.format(item.amt);
			}
			private function formatAmtTotal(item:Object, column:GridColumn):String{
				return numFmttr.format(item.totalAmt);
			}
			private function formatAmtPrice(item:Object, column:GridColumn):String{
				return numFmttr.format(item.credit);
			}
			
		]]>
	</fx:Script>	
		<s:Image x="14" y="17" source="assets/logo2.png"/>
		<s:VGroup y="89" width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Label color="0x000000" fontSize="12"
					 fontStyle="normal" fontWeight="bold" text="TIN: 411-846-093-000"
					 verticalAlign="middle"/>
			<s:Label color="0x000000" fontSize="18"
					 fontStyle="normal" fontWeight="bold" text="PAYMENT"
					 verticalAlign="middle" id="orderType"/>
		</s:VGroup>
		
		
		
		<s:Label x="584" y="41" color="0x000000" fontSize="14"
				 fontStyle="normal" fontWeight="bold" text="OR No. "
				 verticalAlign="middle" textAlign="center" />
		<s:Label id="poID" x="643" y="41" width="114" color="0x000000"
					 fontSize="14" fontWeight="bold"
					 text="13-001A" textAlign="center" typographicCase="uppercase"
					 />
		<s:BorderContainer x="16" y="139" width="{parent.width-28}" height="190"
						   backgroundAlpha="0.0" borderVisible="false"
						   borderWeight="0" contentBackgroundAlpha="0.0"
						   dropShadowVisible="false">
			<s:layout>
				<s:VerticalLayout gap="-2"/>
			</s:layout>
			<s:BorderContainer width="{parent.width-30}" height="95" borderColor="#000000"
							   borderWeight="2">
				<s:layout>
					<s:HorizontalLayout gap="0"/>
				</s:layout>
				<s:Label height="100%" color="#000000"
						 fontWeight="bold" paddingBottom="10" paddingLeft="15"
						 paddingRight="10" paddingTop="10" rotation="-90"
						 text="SOLD TO" textAlign="center"
						 verticalAlign="middle"/>
				<mx:Canvas width="100%" height="95" styleName="VBoxBorder">
					<s:TextArea id="txtSupplier" x="0" y="0" width="100%" borderVisible="false"
								height="100%" editable="false" paddingLeft="3" paddingTop="3"
								fontSize="13" verticalScrollPolicy="off">
						
					</s:TextArea>
				</mx:Canvas>
				<mx:Canvas width="375" height="95" styleName="VBoxBorder" verticalScrollPolicy="off" horizontalScrollPolicy="off"
						   color="#000000">
					
					<s:HGroup x="3" y="3" width="344" height="40" fontSize="15" >
						<s:Label text="DATE:"/>
						<s:Label id="transDate" text="March 27, 2013"/>
					</s:HGroup>
					<s:Label id="poID2" x="3" y="18" width="300" fontSize="13" />
					<s:BorderContainer x="-2" y="62" width="377" height="100%"
									   borderColor="#000000" fontSize="13"
									   borderWeight="2">
						<s:Label x="3" y="4" text="TERM:"/>
						<s:TextInput x="41" y="-3" width="309" id="txtTerm"
									 borderAlpha="0" fontSize="14"
									 paddingLeft="10"
									 prompt="&lt;Terms&gt;"/>
						
					</s:BorderContainer>
					<!--<s:VGroup x="0" y="54" width="100%" gap="0" paddingLeft="2" paddingTop="2" fontSize="13">
						<s:Label text="REFERENCE:"/>
						<s:TextInput width="348" borderAlpha="0"
									 paddingLeft="20" id="txtRef"
									 prompt="&lt; Reference &gt;"/>
					</s:VGroup>-->
				</mx:Canvas>
			</s:BorderContainer>
			<s:BorderContainer width="{parent.width-30}" height="95" borderColor="#000000"
							   borderWeight="2">
				<s:layout>
					<s:HorizontalLayout gap="0"/>
				</s:layout>
				<s:Label height="100%" color="#000000"
						 fontSize="12" fontWeight="bold" paddingBottom="10"
						 paddingLeft="15" paddingRight="10" paddingTop="10"
						 rotation="-90" text="PAYMENT" textAlign="center"
						 verticalAlign="middle"/>
				<mx:Canvas width="100%" height="90" backgroundAlpha="0.0"
						   borderAlpha="0.0" borderVisible="true"
						   dropShadowVisible="false" styleName="VBoxBorder">
					<s:TextArea id="txtInvoiceTo" x="0" y="0" width="100%" borderVisible="false"
								height="100%" editable="false" paddingLeft="3" fontSize="13"
								paddingTop="3" verticalScrollPolicy="off"/>
				</mx:Canvas>
				<s:Label height="100%" color="#000000"
						 fontWeight="bold" paddingBottom="10" paddingLeft="5"
						 paddingRight="5" paddingTop="10" rotation="-90"
						 text="TOTAL" textAlign="center"
						 verticalAlign="middle"/>
				<mx:Canvas width="100%" height="90" borderVisible="false"
						   styleName="VBoxBorder">
					<s:Label id="txtTotAmtPaid" bottom="1" right="0" text="0.00"
								height="100%" paddingLeft="3" paddingTop="3" fontWeight="bold"
								fontSize="18"/>
				</mx:Canvas>
			</s:BorderContainer>
		</s:BorderContainer>
		<s:VGroup x="16" y="340" width="{parent.width-28}" height="100%" paddingBottom="20">
			<mx:Canvas width="100%">
				
				<s:DataGrid id="dg" width="100%" minHeight="385" fontSize="12"
							mouseChildren="false" mouseEnabled="false" editable="false"
							sortableColumns="false" textAlign="center" borderVisible="false">
					<s:columns >
						<s:ArrayList>
							<s:GridColumn dataField="acctNo" headerText="Document" width="150" headerRenderer="com.module.renderer.GridHeadRenderer" editable="false">
								<s:itemRenderer>
									<fx:Component>
										<s:DefaultGridItemRenderer textAlign="center"/>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn dataField="amt" headerText="Amount" width="200" editable="false" headerRenderer="com.module.renderer.GridHeadRenderer" labelFunction="formatAmt">
								<s:itemRenderer>
									<fx:Component>
										<s:DefaultGridItemRenderer textAlign="right"/>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn dataField="credit" headerText="Credit" width="200" editable="false" headerRenderer="com.module.renderer.GridHeadRenderer" labelFunction="formatAmtPrice">
								<s:itemRenderer>
									<fx:Component>
										<s:DefaultGridItemRenderer textAlign="right"/>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn dataField="totalAmt" headerText="Net Amount" editable="false" headerRenderer="com.module.renderer.GridHeadRenderer" labelFunction="formatAmtTotal">
								<s:itemRenderer>
									<fx:Component>
										<s:DefaultGridItemRenderer textAlign="right"/>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
				<s:HGroup id="notFol" x="-22" y="41" width="100%" horizontalAlign="center" visible="false">
					<s:Label text="-- NOTHING FOLLOWS --" fontSize="11" fontFamily="Arial" fontWeight="bold" trackingLeft="5"/>
				</s:HGroup>
			</mx:Canvas>
			<s:VGroup width="100%" gap="2">
					<mx:HRule width="100%" height="2"/>
					<s:HGroup width="100%" fontFamily="Arial" fontWeight="bold" fontSize="14" verticalAlign="middle">
						<s:Label text="TOTAL AMOUNT"/>
						<s:Spacer width="100%"/>
						<s:Label id="txtTotal" text="0.00" textAlign="right" fontSize="18"/>
					</s:HGroup>
					<mx:HRule width="100%"  height="2"/>
			</s:VGroup>
			<s:Spacer height="20%"/>
			<s:HGroup width="100%" verticalAlign="middle" gap="20" paddingLeft="20">
				<s:Label text="Prepared By" width="75" textAlign="right"/>
				<s:Label id="txtPrepBy" width="200" textDecoration="underline"/>
				<!--<s:Spacer width="20%"/>
				<s:Label text="Checked By" width="75" textAlign="right"/>
				<s:Label id="txtCheckBy" width="200" textDecoration="underline"/>-->
			</s:HGroup>
			
			<s:Spacer height="80%"/>
			
			
			<printViews:print_Footer/>
		</s:VGroup>

</mx:Canvas>
