<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" paddingLeft="10" paddingRight="10"
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.customComponents.ProgBarforImage;
			import com.flexlib.controls.Base64Image;
			import com.module.events.ItemsTransEvent;
			import com.module.events.UserEvent;
			import com.module.renderer.ProductRenderer;
			import com.module.views.panels.PopupPanel;
			import com.variables.AccessVars;
			import com.variables.SecurityType;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.effects.Tween;
			import mx.events.CloseEvent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import spark.effects.animation.Animation;
			
			public var _data:Object;
			/** 0=add 1=edit**/
			public var _type:int = 0; 
			public var isSearch:Boolean = false;
			public var hasSelectedItem:Boolean = false;
			private var _fromUpdate:Boolean = false;
			private var _isOpen:Boolean = false;
			private var progBar:ProgBarforImage;
			private var fileRef:FileReference;
			public var theOwner:Object;
			private static var DEF_IMG:String = "assets/icons/default_product.png";
			public var arrCurr:ArrayCollection = new ArrayCollection([
				{name:"USD",curr:0},{name:"PHP",curr:1},{name:"EURO",curr:2}]);
			
			[Embed (source="com/flexlib/assets/assets.swf", symbol="up_arrow")]
			private static var DEFAULT_UP_BUTTON:Class;
			
			[Embed (source="com/flexlib/assets/assets.swf", symbol="down_arrow")]
			private static var DEFAULT_DOWN_BUTTON:Class;
			
			protected function browseclickHandler(event:MouseEvent):void
			{
				//if (!hasSelectedItem)return;
				
				var fileFil:FileFilter = new FileFilter("Images", "*.jpg;*.gif;*.png"); 
				fileRef = new FileReference();
				fileRef.addEventListener(Event.SELECT,progressStart);
				fileRef.addEventListener(Event.COMPLETE,uploadComplete);				
				fileRef.browse([fileFil]);
			}
			
			protected function progressStart(event:Event):void
			{
				fileRef.load();
			}
			
			protected function uploadComplete(event:Event):void
			{
				fileRef.removeEventListener(Event.COMPLETE,uploadComplete);
				var loader:Loader = new Loader();
				loader.loadBytes(fileRef.data);
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE,loaderCompleteHandler);	
			}
			
			private function loaderCompleteHandler(event:Event):void
			{
				var loader:Loader = (event.target as LoaderInfo).loader;
				var bmp:Bitmap = Bitmap(loader.content);
				var dt:Date = new Date();
				if (txtItemModNo.text!="")
					txtImagePath.text = txtItemModNo.text+"_"+dt.getTime().toString()+fileRef.type;
				//trace(txtImagePath.text)
				imgProd.source = bmp;
				loader.unloadAndStop();
				loader = null;
			}
			
			public function loadImage(img:String):void{
				imgProd.unloadAndStop();
				imgProd.source = SecurityType.IMG_PATH+img;
			}
			public function unloadImage():void{
				imgProd.unloadAndStop();
				imgProd.source = DEF_IMG;
			}
			
			protected function SearchClickHandler(event:MouseEvent):void
			{
				//btnSave.enabled = false;
				hasSelectedItem = false;
				if (_isOpen){
					_isOpen = false;
					anim.play(null,true);
				}
				var log:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.SEARCH_PRODUCT,{searchstr:txtSearchStr.text,condition:"",pBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log);
				
				_type = 0;
				_data = new Object();
				_fromUpdate = false;
				hasSelectedItem = true;
				hgControl.enabled = true;
				clearFields(null);
				btnSave.visible = btnSave.includeInLayout = false;
				btnEdit.visible = btnEdit.includeInLayout = false;
				btnClear.visible  = btnClear.includeInLayout = false;
				btnOrdHis.visible  = btnOrdHis.includeInLayout = false;
				mainCont.enabled = false;
				hasSelectedItem = false;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				btnSave.addEventListener(MouseEvent.CLICK,updateClickHandler);
				btnClear.addEventListener(MouseEvent.CLICK,clearFields);
				
				var log4:UserEvent = new UserEvent(UserEvent.GET_SUPPLIER_LIST,{qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log4);
				//var d:Date = new Date();
				dfDate.selectedDate = new Date(); 
			}
			
			private function updateClickHandler(event:MouseEvent):void{
				//_type=1;
				saveClickHandler(event);
			}
			
			private var _arrCol:ArrayCollection;
			public function set dataCollection(arrCol:ArrayCollection):void{
				_arrCol = arrCol
				
				if (dgSearch.numElements > 0){
					dgSearch.removeAllElements();
				}
				
				if (arrCol.length > 0){
					var itemUser:ProductRenderer;
					var i:int=0;
					for each (var obj:Object in arrCol){
						itemUser = new ProductRenderer()
						if (i % 2 != 0)
							itemUser._bgColor = 0xFFFFFF;
						itemUser.data = obj;
						itemUser.theBox = this
						dgSearch.addElement(itemUser);
						i++;
					}
				}
			}
			public function setDataProvider(arr:ArrayCollection,type:int):void{
				if (type == 4){
					//dataCollection = arr
					cmbSupplier.dataProvider = arr;
					cmbSupplier.labelFunction = mycmbSupplierLabelFunction;
					cmbSupplier.validateNow();
				}
			}
			private function mycmbSupplierLabelFunction(item:Object):String{
				return (item)?item.supCode+" - "+item.compName:"";
			}
						
			public function clearFields(event:MouseEvent):void
			{
				if (!hasSelectedItem)return;
				
				if (_fromUpdate){
					_fromUpdate = false;
					
					_data.modelNo = txtItemModNo.text;
					_data.pCode = txtItemCode.text;
					_data.subNum = txtSubNum.text;
					_data.desc = txtDesc.text
					_data.comModUse = txtComModUse.text;
					_data.supplier = cmbSupplier.selectedItem.supID;
					_data.remarks = cbNotCD.selected+"|"+cbNotAvail.selected+"|"+cbOthers.selected+"|"+txtOthers.text;
					_data.pDate = setDateFormat(dfDate.selectedDate);
					_data.factor = txtFactor.text;
					
					_data.imgPath = txtImagePath.text;
					_data.weight = txtWeight.text.replace(/\b,\b/g,"");
					_data.size = txtSize.text;
					_data.stockCnt = txtStock.text;
					_data.returnable = cbReturn.selected?1:0;
					_data.inactive = cbInactive.selected?1:0;
					
					_data.listPrice = txtLstPrice.text.replace(/\b,\b/g,"");				
					_data.dealPrice = txtDealPrice.text.replace(/\b,\b/g,"");				
					_data.srPrice = txtSRP.text.replace(/\b,\b/g,"");
					_data.priceCurr = cmbLstCurr.selectedIndex+"|"+cmbDealCurr.selectedIndex;
					
					(theOwner as ProductRenderer).data = _data;
					(theOwner as ProductRenderer).creationCompleteHandler(null);
					return;
				}
				
				if (_type == 0){
					txtItemModNo.text = "";
					txtItemModNo.styleName = "required";
					txtItemCode.text = "";
					txtItemCode.styleName = "required";
					txtImagePath.text = "";
					txtStock.text = "0";
					txtLstPrice.text = "0.00";
					txtLstPrice.styleName = "required";
					txtDealPrice.text = "0.00";
					txtDealPrice.styleName = "required";
					txtSRP.text = "0.00";
					txtSRP.styleName = "required";
					cmbSupplier.selectedIndex = -1;
					txtWeight.text = "";
					txtWeight.styleName = "required";
					txtSize.text = "";
					txtSubNum.text = "";
					txtDesc.text = "";
					txtComModUse.text = "";	
					txtFactor.text = "";
					dfDate.selectedDate = new Date();
					imgProd.unloadAndStop();
					imgProd.source = DEF_IMG;
					
					cbNotCD.selected = false;
					cbNotAvail.selected = false;
					cbOthers.selected = false;
					txtOthers.text = "";
					cbReturn.selected =false;
					cbInactive.selected = false;
					cmbLstCurr.selectedIndex =0;
					cmbDealCurr.selectedIndex =0;
						
					
				}else{
					Alert.show("Are you sure to reset to default value?","Confirm Reset to Default",Alert.YES|Alert.NO,null,resetDefCloseHandler)
				}
				
			}
			
			private function resetDefCloseHandler(evt:CloseEvent):void{
				if (evt.detail == Alert.YES){
					txtItemModNo.text = _data.modelNo;
					txtItemCode.text = _data.pCode;
					txtSubNum.text = _data.subNum;
					txtComModUse.text = _data.comModUse;
					txtDesc.text = _data.desc;
					cmbSupplier.selectedItem = setSelectedSupplier(_data.supplier);
					txtFactor.text = _data.factor;
					var arr:Array = String(_data.pDate).split("-");
					dfDate.selectedDate = new Date(arr[0],(arr[1]-1),arr[2]);
					arr  = String(_data.remarks).split("|");
					if (arr.length > 0){
						//cbNotCD.selected+"|"+cbNotAvail.selected+"|"+cbOthers+"|"+txtOthers.text;
						cbNotCD.selected = String(arr[0])=="true"?true:false;
						cbNotAvail.selected = String(arr[1])=="true"?true:false;
						cbOthers.selected = String(arr[2])=="true"?true:false;
						txtOthers.text = String(arr[3]);
					}
					txtImagePath.text = _data.imgPath!=""?_data.imgPath:"";
					txtStock.text = _data.stockCnt;					
					txtWeight.text = numFmttr.format(_data.weight);
					txtSize.text = _data.size;
					cbReturn.selected = String(_data.returnable)=="1"?true:false;
					cbInactive.selected = String(_data.inactive)=="1"?true:false;
					txtLstPrice.text = numFmttr.format(_data.listPrice);
					txtDealPrice.text = numFmttr.format(_data.dealPrice);
					txtSRP.text = numFmttr.format(_data.srPrice);
					
					arr = String(_data.priceCurr).split("|");
					if (arr.length > 0){
						cmbLstCurr.selectedIndex = int(arr[0]);
						cmbDealCurr.selectedIndex = int(arr[1]);
					}
					
					
					
					imgProd.unloadAndStop();
					imgProd.source = _data.imgPath!=""?SecurityType.IMG_PATH+_data.imgPath:DEF_IMG;
				}
			}
			
			public function setSelectedSupplier(supID:String):void{
				var i:int=0;
				for each (var item:Object in cmbSupplier.dataProvider as ArrayCollection){
					trace(item.supID," == ",supID)
					if (item.supID == supID){
						cmbSupplier.selectedItem = item;
						cmbSupplier.selectedIndex = i;
						break;
					}	
					i++;
				}
			}
			
			private function UserErrorTrap():String{
				var strRet:String = ""
				
				if (txtItemModNo.text == "")
					strRet +="- Item / Model Number field is empty \r";
				if (txtItemCode.text == "")
					strRet +="- Item Code field is empty \r";
				if (cmbSupplier.selectedItem==null)
					strRet +="- Supplier field is empty \r";
				if (txtWeight.text == "" || txtWeight.text == "0.00")
					strRet +="- Weight field is empty or 0.00 \r";
				/*if (txtStock.text == "")
					strRet +="- Initial Stock Count field is empty \r";*/
				if (txtSRP.text == "0.00")
					strRet +="- SRP Price field is empty \r"; 
				
				return strRet;
			}
			
			private function uploadImage():void{
				var urlReq:URLRequest = new URLRequest();
				urlReq.url = SecurityType.HTTP_HOST+"/uploadImg.php?imgPath="+ txtImagePath.text;
				/* var obj:Object = {}
				obj.imgPath = txtImagePath.text;
				urlReq.data = obj; */
				fileRef.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,uploadImgComplete);
				//fileRef.addEventListener(Event.COMPLETE,uploadImgComplete);
				fileRef.addEventListener(SecurityErrorEvent.SECURITY_ERROR,uploadErr);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR,uploadErr);
				fileRef.addEventListener(HTTPStatusEvent.HTTP_STATUS,uploadErr);
				fileRef.upload(urlReq,"img");
			}
						
			protected function uploadErr(event:Event):void
			{
				Alert.show("File upload failed.","Error");
				//For debugging you should see the entire error dump.
				Alert.show(event.toString());
				
			}
			
			private function uploadImgComplete(event:DataEvent):void
			{
				trace("uploadComplete:",event.data);
				saveClickHandler(null);
			}
			
			protected function saveClickHandler(event:MouseEvent):void
			{
				if (!hasSelectedItem)return;
								
				var strErr:String = UserErrorTrap();
				if (strErr != ""){
					/*if (_type==0)
						hasSelectedItem = false;*/
					
					Alert.show(strErr,"Error Summary:");
					return;
				}
				//trace("_data.imgPath:_",String(_data.imgPath)+"_")
				if (_type==0 && _data && _data.hasOwnProperty('prodID') && _data.prodID != ""){
					Alert.yesLabel = "Add as New";
					Alert.noLabel = "Update only";
					Alert.buttonWidth = 120;
					Alert.show("'"+_data.prodID+"' is already in our database.\n Add this product as 'New Product' or just update the current product?","Confirmation",Alert.YES|Alert.NO|Alert.CANCEL,null,closeConfirmHandler);
					return;
				}
				hgControl.enabled = false;
				if (event != null && fileRef && imgProd.source != DEF_IMG){
					if (_type==0){
						var dt:Date = new Date();
						txtImagePath.text = txtItemModNo.text+"_"+dt.getTime().toString()+fileRef.type;
						uploadImage();
					}else if(_type==1 && txtImagePath.text != _data.imgPath)
						uploadImage();
					
					return;
				}
				
				
				var obj:Object = {}
				obj.modelNo = txtItemModNo.text;
				obj.pCode = txtItemCode.text;
				obj.subNum = txtSubNum.text;
				obj.desc = txtDesc.text;
				obj.comModUse = txtComModUse.text;
				obj.supplier = cmbSupplier.selectedItem.supID;
				obj.remarks = cbNotCD.selected+"|"+cbNotAvail.selected+"|"+cbOthers.selected+"|"+txtOthers.text;
				obj.pDate = setDateFormat(dfDate.selectedDate);
				obj.factor = txtFactor.text;
				
				obj.imgPath = txtImagePath.text;
				obj.weight = txtWeight.text.replace(/\b,\b/g,"");
				obj.size = txtSize.text;
				obj.stockCnt = txtStock.text;
				obj.returnable = cbReturn.selected?1:0;
				obj.inactive = cbInactive.selected?1:0;
				
				obj.listPrice = txtLstPrice.text.replace(/\b,\b/g,"");				
				obj.dealPrice = txtDealPrice.text.replace(/\b,\b/g,"");				
				obj.srPrice = txtSRP.text.replace(/\b,\b/g,"");
				obj.priceCurr = cmbLstCurr.selectedIndex+"|"+cmbDealCurr.selectedIndex;
				
				
				if (_type == 0){
					obj.pBox = this;
					var addUser:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.ADD_PRODUCT,obj);
					CairngormEventDispatcher.getInstance().dispatchEvent(addUser);
				}else{
					obj.prodID = _data.prodID;
					if (String(_data.modelNo).toLowerCase() == txtItemModNo.text.toLowerCase())
						obj.sameProd = 1;
					else
						obj.sameProd = 0;
					obj.pBox = this;
					_fromUpdate = true;
					var editUser:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.EDIT_PRODUCT,obj);
					CairngormEventDispatcher.getInstance().dispatchEvent(editUser);
				}
			}
			
			
			public function setDateFormat(d:Date):String{
				var strDate:String="";
				//strDate = String(d.month+1)+"/"+d.date+"/"+d.fullYear;
				var mon:String = (d.month+1 < 10)?"0"+String(d.month+1):String(d.month+1);
				var dat:String = (d.date < 10)?"0"+String(d.date):String(d.date);
				strDate = d.fullYear+"-"+mon+"-"+dat;
				return strDate;
			}
			
			private function closeConfirmHandler(evt:CloseEvent):void{
				Alert.yesLabel = "Yes";
				Alert.noLabel = "No";
				Alert.buttonWidth = 65;
				if (evt.detail == Alert.YES){
					_data = null;
					_type = 0;
					saveClickHandler(new MouseEvent(MouseEvent.CLICK));
				}else if (evt.detail == Alert.NO){
					_type=1;
					btnSave.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				}
			}
			
			protected function showHideclickHandler(event:MouseEvent):void
			{
				if (_isOpen){
					_isOpen = false;	
					showHide();
				}else{
					_isOpen = true;
					showHide();
				}
			}
			
			protected function anim_effectEndHandler(event:EffectEvent):void
			{
				if (!_isOpen){
					btnShowHide.setStyle("icon",DEFAULT_UP_BUTTON);
				}else{
					btnShowHide.setStyle("icon",DEFAULT_DOWN_BUTTON);
				}
			}
			
			public function showHide(force:Boolean = false):void{
				if (force && !_isOpen)
					_isOpen = true;
				else if (force && _isOpen)
					return;
					
				if (!_isOpen){
					anim.play(null,true);
				}else{
					anim.play();
				}
			}
			
			/*protected function createProductTab(event:MouseEvent):void
			{
				_type = 0;
				hasSelectedItem = true;
				saveClickHandler(new MouseEvent(MouseEvent.CLICK));
				//AccessVars.instance().mainApp.appChange(null,2,"inv_np");
			}	*/
			
			protected function createProductTab(event:MouseEvent):void
			{
				_type = 0;
				_data = null;
				hasSelectedItem = true;
				mainCont.enabled = true;
				btnSave.label = "Save Product";
				btnSave.visible = btnSave.includeInLayout = true;
				btnEdit.visible = btnEdit.includeInLayout = false;
				btnOrdHis.visible = btnOrdHis.includeInLayout = false;
				btnClear.visible = btnClear.includeInLayout = false
				clearFields(null);
				txtItemModNo.setFocus();
				//saveClickHandler(new MouseEvent(MouseEvent.CLICK));
			}
			
			protected function editClickHander(event:MouseEvent):void
			{
				_type = 1;
				mainCont.enabled = true;
				btnSave.label = "Save Changes";
				btnSave.visible = btnSave.includeInLayout = true;
				btnEdit.visible = btnEdit.includeInLayout = false;
				btnClear.visible = btnClear.includeInLayout = true;
				txtItemModNo.setFocus();
			}
			
			
			protected function advSearch_clickHandler(event:MouseEvent):void
			{
				var popPnl:PopupPanel = new PopupPanel();
				popPnl.width = searchProd.width;
				//popPnl.height = undefined;
				popPnl.popView = 2;
				popPnl.mainID = "4";
				popPnl.mainComp = this;
				PopUpManager.addPopUp(popPnl,searchProd,true);
				PopUpManager.centerPopUp(popPnl);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:Animate id="anim" targets="{[newProd]}" duration="300" disableLayout="true" effectEnd="anim_effectEndHandler(event)">
			<s:SimpleMotionPath property="height" valueFrom="0" valueTo="undefined" />
			<!--<s:SimpleMotionPath property="y" valueFrom="{newProd.stage.y}" valueTo="10000" />-->
			<s:SimpleMotionPath property="alpha" valueFrom="0" valueTo="1" />
			<s:SimpleMotionPath property="visible" valueFrom="false" valueTo="true" />
		</s:Animate>
		<mx:NumberFormatter id="numFmttr" precision="2" useThousandsSeparator="true"  />
	</fx:Declarations>
	<!--<s:Label text="Products" fontWeight="bold" fontSize="18" fontStyle="italic"/>-->
	
	<s:VGroup id="searchProd" width="25%" height="100%" paddingBottom="5" paddingTop="5">
		<s:BorderContainer width="100%" height="100%" cornerRadius="10" borderStyle="inset" >
			<s:layout>
				<s:VerticalLayout paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"/>
			</s:layout>
			<s:borderStroke> 
				<mx:SolidColorStroke 
					color="{AccessVars.instance().borderStrokeColor}" 
					weight="2"/> 
			</s:borderStroke> 
				<s:HGroup width="100%" horizontalAlign="left" verticalAlign="middle" height="30" paddingRight="5">
					<s:TextInput prompt="[Supplier / Item/Model No.]" id="txtSearchStr" enter="SearchClickHandler(null)" width="90%"/>
					<mx:Button width="28" height="28" click="SearchClickHandler(event)" buttonMode="true" styleName="btnSearch" toolTip="Search"/>
					<s:Button label="Adv. Search" buttonMode="true" click="advSearch_clickHandler(event)"/>
				</s:HGroup>
				<s:HGroup width="100%" fontSize="14" horizontalAlign="center" fontWeight="bold" gap="2">
					<s:Label text="Item /Model No." width="65%" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5"  color="{AccessVars.instance().headerFontColor}" verticalAlign="middle"/>
					<s:Label text="Code" width="35%" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5"  color="{AccessVars.instance().headerFontColor}" verticalAlign="middle"/>
					<!--<s:Label text="Unit Price" width="15%" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5"  color="{AccessVars.instance().headerFontColor}"/>
					<s:Label text="Stock" width="10%" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5"  color="{AccessVars.instance().headerFontColor}"/>-->
					<!--<s:Label text="Control" width="25%" height="40" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5"  color="{AccessVars.instance().headerFontColor}" verticalAlign="middle" />-->
				</s:HGroup>
				<s:Group width="100%" height="100%">
					<s:Scroller width="100%" height="100%">
						<s:VGroup id="dgSearch" gap="2" width="100%" height="100%" contentBackgroundAlpha="1" contentBackgroundColor="0x8bc76d" clipAndEnableScrolling="true"/>
					</s:Scroller>
				</s:Group>
				<mx:HRule width="100%"/>
				<s:HGroup width="100%" horizontalAlign="left" paddingLeft="10" paddingBottom="5">
					<mx:Button id="btnShowHide" icon="{DEFAULT_UP_BUTTON}" click="showHideclickHandler(event)" width="50" height="10" visible="false" includeInLayout="false"/>
					<s:Label text="Total Products: "/>
					<s:Label id="totCount" text="0" width="50" textAlign="right" paddingRight="10"/>
				</s:HGroup>
		</s:BorderContainer>
	</s:VGroup>
	
	<s:HGroup id="newProd" width="80%"  height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5">
		<s:BorderContainer width="100%" height="100%" cornerRadius="10" borderStyle="inset">
			<s:borderStroke> 
				<mx:SolidColorStroke color="{AccessVars.instance().borderStrokeColor}" weight="2"/> 
			</s:borderStroke> 
			<s:layout>
				<s:VerticalLayout paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5"/>
			</s:layout>
			<s:VGroup width="100%" height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5" gap="7">
				<s:Label text="Product Information" fontSize="18"/>
				<mx:HRule width="100%" height="2"/>
				<s:HGroup id="mainCont" width="100%"  fontSize="16"  enabled="false">
					<s:VGroup  width="60%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5" gap="15">
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="Item / Model No" width="130" textAlign="right"/>
							<s:TextInput id="txtItemModNo" width="100%"  styleName="required" valueCommit="{txtItemModNo.styleName = txtItemModNo.text==''?'required':''}"/>								
							<s:Label text="Code:" textAlign="right"/>
							<s:TextInput id="txtItemCode" width="60"  styleName="required" valueCommit="{txtItemCode.styleName = txtItemCode.text==''?'required':''}"/>
						</s:HGroup>
						<s:HGroup  width="100%" verticalAlign="middle">
							<s:Label text="Sub Number" width="130" textAlign="right"/>
							<s:TextInput id="txtSubNum" width="100%"/>
						</s:HGroup>
						<s:HGroup  width="100%" verticalAlign="middle">
							<s:Label text="Description" width="130" textAlign="right"/>
							<s:TextArea id="txtDesc" width="100%" height="50"/>
						</s:HGroup>
						<s:HGroup  width="100%" verticalAlign="middle">
							<s:Label text="Common model use" width="130" textAlign="right"/>
							<s:TextInput id="txtComModUse" width="100%"/>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="Supplier" width="130" textAlign="right"/>
							<s:BorderContainer id="suppCont" width="100%" styleName="required" height="23" cornerRadius="2">
								<s:layout>
									<s:HorizontalLayout verticalAlign="top" horizontalAlign="center"/>
								</s:layout>
								<s:DropDownList id="cmbSupplier" width="100%" prompt="[Select Supplier]" valueCommit="{suppCont.styleName = cmbSupplier.selectedItem==null?'required':'';}"/>
							</s:BorderContainer>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" gap="5">
							<s:Label text="Remarks" width="130" textAlign="right"/>
							<s:VGroup width="100%" paddingLeft="5">
								<s:CheckBox id="cbNotCD" selected="false" label="Not on CD"/>
								<s:CheckBox id="cbNotAvail" selected="false" label="No longer available from John Deere"/>
								<s:HGroup gap="10" width="100%">
									<s:CheckBox id="cbOthers" selected="false" label="Others"/>
									<s:TextInput id="txtOthers" width="100%"/>
								</s:HGroup>
							</s:VGroup>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" gap="5">
							<s:Label text="Date" width="130" textAlign="right"/>
							<mx:DateField id="dfDate" width="60%" showToday="true"/>
							<s:Label text="Factor" textAlign="right"/>
							<s:TextInput id="txtFactor" width="60"/>
						</s:HGroup>
					</s:VGroup>
					<s:VGroup  width="40%" height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5" gap="8">							
							<s:HGroup paddingTop="2" height="45%" >
								<s:Label text="Image" width="50" textAlign="right" verticalAlign="top"/>
								<s:HGroup id="hgImage" width="160" height="140" paddingBottom="5" paddingTop="5" paddingLeft="10" paddingRight="5" 
										  horizontalAlign="center" verticalAlign="middle">
									<mx:Image id="imgProd" width="100%" height="100%" source="{DEF_IMG}" click="browseclickHandler(event)" 
											  maintainProjectionCenter="true" maintainAspectRatio="true" verticalAlign="middle"/>
									<s:Label id="txtImagePath" visible="false" includeInLayout="false" width="0"/>
								</s:HGroup>
								<s:VGroup paddingLeft="5" paddingRight="5">
									<s:HGroup  width="100%" verticalAlign="middle">
										<s:Label width="75" text="Weight" textAlign="right"/>
										<s:TextInput id="txtWeight" width="100%" restrict="0-9." textAlign="right"  styleName="required" valueCommit="{txtWeight.styleName = txtWeight.text==''?'required':'';txtWeight.text=numFmttr.format(txtWeight.text);}"/>
										<s:Label text="kg"/>
									</s:HGroup>
									<s:HGroup  width="100%" verticalAlign="middle">
										<s:Label width="75" text="Size" textAlign="right"/>
										<s:TextInput id="txtSize" width="100%" textAlign="right"/>
									</s:HGroup>
									<s:HGroup  width="100%" verticalAlign="middle">
										<s:Label width="75" text="Initial Stock"
												 textAlign="right"/>
										<s:TextInput id="txtStock" width="100%" restrict="0-9." text="0" textAlign="right"/>
									</s:HGroup>										
									<s:CheckBox id="cbReturn" selected="false" label="Returnable"/>
									<s:CheckBox label="Inactive" id="cbInactive" selected="false"/>
								</s:VGroup>
							</s:HGroup>
							<mx:Canvas width="100%" height="55%">
								<s:BorderContainer y="5" width="100%" height="100%" borderWeight="2">
									<s:layout>
										<s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10" verticalAlign="middle" gap="15"/>
									</s:layout>
									<s:HGroup  width="100%" verticalAlign="middle">
										<s:Label width="140" text="List Price" textAlign="right"/>
										<s:TextInput id="txtLstPrice" width="100%" restrict="0-9." text="0.00" textAlign="right"  styleName="required" valueCommit="{txtLstPrice.styleName = txtLstPrice.text==''||txtLstPrice.text=='0.00'?'required':'';txtLstPrice.text=numFmttr.format(txtLstPrice.text)}"/>
										<s:DropDownList id="cmbLstCurr" width="80" labelField="name" fontSize="14"
														dataProvider="{arrCurr}" selectedIndex="0"/>
									</s:HGroup>
									<s:HGroup  width="100%" verticalAlign="middle">
										<s:Label width="140" text="Minimum Dealer Price"
												 textAlign="right"/>
										<s:TextInput id="txtDealPrice" width="100%" restrict="0-9." text="0.00" textAlign="right"  styleName="required" valueCommit="{txtDealPrice.styleName = txtDealPrice.text==''||txtDealPrice.text=='0.00'?'required':'';txtDealPrice.text=numFmttr.format(txtDealPrice.text)}"/>
										<s:DropDownList id="cmbDealCurr" width="80"  selectedIndex="0" fontSize="14"
														dataProvider="{arrCurr}" labelField="name"/> 
									</s:HGroup>
									<s:HGroup  width="100%" verticalAlign="middle">
										<s:Label width="140" text="Suggested Retail Price"
												 textAlign="right"/>
										<s:TextInput id="txtSRP" width="100%" restrict="0-9." text="0.00" textAlign="right"  styleName="required" valueCommit="{txtSRP.styleName = txtSRP.text==''||txtSRP.text=='0.00'?'required':'';txtSRP.text=numFmttr.format(txtSRP.text)}"/>
										<s:Label width="80" text="Php" textAlign="left"/>
									</s:HGroup>
								</s:BorderContainer>
								<mx:Canvas x="15" height="15" width="50" backgroundAlpha="1" backgroundColor="0xFFFFFF">
									<s:Label text="Pricing" fontWeight="bold" verticalCenter="0" horizontalCenter="0"/>
								</mx:Canvas>
								
							</mx:Canvas>
					</s:VGroup>
				</s:HGroup>
			
				<mx:HRule width="100%" height="4" chromeColor="0x000000"/>
				<s:HGroup id="hgControl" width="100%" height="50" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5"
						  horizontalAlign="left" verticalAlign="middle">
					<s:Button id="btnSave" label="Save" visible="false" includeInLayout="false"/>
					<s:Spacer width="100%"/>
					<s:Button id="btnNewProd" label="New Product" click="createProductTab(event)"/>
					<s:Button id="btnEdit" label="Edit Product Info" click="editClickHander(event)" visible="false" includeInLayout="false"/>				
					<s:Button id="btnClear" label="Cancel Changes" visible="false" includeInLayout="false"/>
					<s:Button id="btnOrdHis" label="Order History" visible="false" includeInLayout="false"/>
					
					
				</s:HGroup>
			</s:VGroup>
		</s:BorderContainer>	
	</s:HGroup>
</s:HGroup>
