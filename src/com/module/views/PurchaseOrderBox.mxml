<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" minWidth="1000" minHeight="500"
		  xmlns:s="library://ns.adobe.com/flex/spark" paddingLeft="10" paddingRight="10"
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.module.events.DataListEvent;
			import com.module.events.ItemsTransEvent;
			import com.module.events.UserEvent;
			import com.module.renderer.PurchaseOrdRenderer;
			import com.variables.AccessVars;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.managers.PopUpManager;
			import mx.printing.FlexPrintJob;
			import mx.printing.FlexPrintJobScaleType;
			
			import spark.components.Application;
			import spark.events.GridEvent;
			import spark.events.GridItemEditorEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			private var _totalQty:int = 0;
			public var _tempData:Object;
			private var _origData:ArrayCollection;
			public var purReqID:String = "";
			public var _type:int = 0; 
			public var theOwner:Object;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				var log:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.SEARCH_PRODUCT,{searchstr:"",condition:"",sBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log);
				
				var log2:DataListEvent = new DataListEvent(DataListEvent.GET_BRANCH_LIST,{pBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log2);
				
				var log3:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.GET_PURORD_NUMBER,{qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log3);
				
				var log4:UserEvent = new UserEvent(UserEvent.GET_SUPPLIER_LIST,{qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log4);
				
				dfDate.selectedDate = new Date(); 
			}
			
			public function setDataProvider(arr:ArrayCollection,type:int):void{
				if (type == 0){
					cmbProd.dataProvider = arr;
					cmbProd.labelFunction = mycmbProdLabelFunction;
				}else if (type == 1){
					//dataCollection = arr
					cmbDeliver.dataProvider = arr;
					//cmbDeliver.labelFunction = mycmbDeliverLabelFunction;
					cmbDeliver.selectedIndex = 0;
					//cmbDeliver.validateNow();
				}else if (type == 3){
					dg.dataProvider = _origData = arr;
					numItems.text = "0";
					_totalQty = 0
					var vat:Number = 0;			
					var _subTot:Number = 0;
					var _totWeight:Number = 0;
					for each (var item:Object in arr){						
						_subTot += Number(item.total);
						_totWeight += Number(item.weight);
						vat += Number(Number(item.total)*0.12);
						_totalQty+=Number(item.qty);
						
					}
					txtSubtot.text = numFmttr.format(_subTot);
					txtVat.text = numFmttr.format(vat);//roundDec(_subTot*0.12).toFixed(2);
					txtGT.text = numFmttr.format(_subTot+vat);
					totWeight.text = String(_totWeight);
					numItems.text = String(_totalQty);
				}else if (type == 4){
					//dataCollection = arr
					cmbSupplier.dataProvider = arr;
					//cmbSupplier.labelFunction = mycmbSupplierLabelFunction;
					//cmbSupplier.validateNow();
				}
			}
			
			public function setSelectedSupplier(supID:String):void{
				var i:int=0;
				for each (var item:Object in cmbSupplier.dataProvider as ArrayCollection){
					trace(item.supID," == ",supID)
					if (item.supID == supID){
						cmbSupplier.selectedItem = item;
						cmbSupplier.selectedIndex = i;
						break;
					}	
					i++;
				}
			}
			public function setSelectedDelivery(branchID:String):void{
				var i:int=0;
				for each (var item:Object in cmbDeliver.dataProvider as ArrayCollection){
					trace(item.branchID," == ",branchID)
					if (item.branchID == branchID){
						cmbDeliver.selectedItem = item;
						cmbDeliver.selectedIndex = i;
						break;
					}	
					i++;
				}
			}
			
			public function getSelectedInvoice(branchID:String):Object{
				//var i:int=0;
				for each (var item:Object in cmbDeliver.dataProvider as ArrayCollection){
					//trace(item.branchID," == ",branchID)
					if (item.branchID == branchID){
						return item;
					}	
					//i++;
				}
				return {};
			}
			
			private var _arrCol:ArrayCollection;
			public function set dataCollection(arrCol:ArrayCollection):void{
				_arrCol = arrCol
				
				if (dgSearch.numElements > 0){
					dgSearch.removeAllElements();
				}
				
				if (arrCol.length > 0){
					var itemUser:PurchaseOrdRenderer;
					for each (var obj:Object in arrCol){
						itemUser = new PurchaseOrdRenderer()
						itemUser.data = obj;
						itemUser.theBox = this
						dgSearch.addElement(itemUser);
					}
				}
			}
			
			/* public function setSelectedBranch(bID:String):void{
				for each (var item:Object in cmbBranch.dataProvider as ArrayCollection){
					trace(item.branchID," == ",bID)
					if (item.branchID == bID){
						cmbBranch.selectedItem = item;
						break;
					}	
				}
			} */
			
			
			private function mycmbProdLabelFunction(item:Object):String{
				return (item)?item.modelNo +" - "+item.pCode+" SRP: "+numFmttr.format(item.srPrice):"";
			}
			private function mycmbDeliverLabelFunction(item:Object):String{
				return (item)?item.bCode+" - "+item.bLocation:"";
			}
			private function mycmbSupplierLabelFunction(item:Object):String{
				return (item)?item.supCode+" - "+item.compName:"";
			}
			
			protected function cmbProdchangeHandler(event:IndexChangeEvent):void
			{
				if (cmbProd.selectedItem == null) return;
				var obj:Object = cmbProd.selectedItem;
				txtPrice.text = obj.srPrice;
				//txtStock.text =  obj.stockCnt;
				//txtQty.maximum = Number(obj.stockCnt);
				if (txtQty.value !=0){
					txtQtychangeHandler(null);
				}
			}
			
			protected function txtQtychangeHandler(event:Event):void
			{
				if (txtQty.value == 0) return;
				
				//txtStock.text =="0" || 
				txtSub.text = numFmttr.format(Number(txtPrice.text)*int(txtQty.value));
			}
			
			private function roundDec(numIn:Number, decimalPlaces:int = 2):Number {
				var nExp:int = Math.pow(10,decimalPlaces) ; 
				var nRetVal:Number = Math.round(numIn * nExp) / nExp
				return nRetVal;
			}
			
			/* protected function cmbQuotechangingHandler(event:IndexChangeEvent):void
			{
				if (cmbQuote.selectedItem == null) return;
				var obj:Object = cmbQuote.selectedItem;
				txtBname.text = obj.businame;
				txtBAdd.text = obj.baddress;
				txtBPhone.text = obj.bPhoneNum;
				txtBMobile.text = obj.bMobileNum;
				txtBranch.text = obj.branchName;
				trace("cmbQuotechangingHandler",obj.quoteID)
				var log2:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.GET_QUOTE_DETAILS,{quoteID:obj.quoteID,qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log2);
			} */
			
			protected function btnAddclickHandler(event:MouseEvent):void
			{	
				if (cmbProd.selectedItem == null || txtQty.value == 0) return;
				var arrCol:ArrayCollection;
				if (dg.dataProvider == null)
					arrCol = new ArrayCollection();
				else
					arrCol = dg.dataProvider as ArrayCollection;
				
				var obj:Object = cmbProd.selectedItem;
				_totalQty +=txtQty.value;
				totWeight.text = String(Number(totWeight.text) + Number(obj.weight));
				
				var num:int = arrCol.length==0?1:arrCol.length+1;
				arrCol.addItem({num:num,prdID:obj.prodID,pCode:obj.pCode,modelNo:obj.modelNo,prodDesc:obj.desc,qty:txtQty.value,price:obj.srPrice,weight:obj.weight,
							vat:txtVat.text,total:txtSub.text});
				dg.dataProvider = arrCol;
				
				var subTotComp:Number = obj.srPrice*txtQty.value;
				var vat:Number = subTotComp*0.12
				txtSubtot.text = numFmttr.format(subTotComp+Number(txtSubtot.text.replace(/\b,\b/g,"")));
				txtVat.text = numFmttr.format(vat+Number(txtVat.text.replace(/\b,\b/g,"")));
				txtGT.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))+txtVat.text.replace(/\b,\b/g,""));
				numItems.text = String(_totalQty);
				cmbProd.selectedIndex = -1;
				cmbProd.textInput.text = "";
				txtQty.value = 0;
				txtPrice.text = txtSub.text = "0.00";
				txtQtychangeHandler(null);
				//txtStock.text = "0";
				cmbProd.setFocus();
			}
			protected function btnAdd_keyUpHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER)
					(event.target as Button).dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
			
			private function updateTotal(editVat:Boolean =true):void{
				if (txtVat.text.indexOf(".")==-1)
					txtVat.text +=".00";
				
				txtSubtot.text = numFmttr.format(Number(txtSub.text.replace(/\b,\b/g,""))+Number(txtSubtot.text.replace(/\b,\b/g,"")));
				if(editVat)
					txtVat.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))*0.12);
				txtGT.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))+Number(txtVat.text.replace(/\b,\b/g,"")));
			}
			
			protected function CheckOutclickHandler(event:MouseEvent):void
			{
				if (dg.dataProviderLength == 0 )return;
				if (cmbSupplier.selectedIndex == -1){
					Alert.show("Please select a supplier","No Supplier Selected");
					return;
				}
				var obj:Object = {}
				obj.purReqID = purReqID;//cmbQuote.selectedItem.custID;
				obj.supID = cmbSupplier.selectedItem.supID;
				obj.branchID = _tempData.branchID;
				obj.delID = cmbDeliver.selectedItem.branchID;
				obj.totalWeight = totWeight.text;
				obj.totalAmt = txtGT.text.replace(/\b,\b/g,"");
				obj.dateTrans = setDateFormat(dfDate.selectedDate);
				//obj.vat = txtVat.text;
				var strItem:Array = new Array();
				var i:int=0;
				for each (var item:Object in dg.dataProvider){
					if (item.isSelected=="1"){
						strItem.push(item.prd_prodID+"|"+item.qty+"|"+item.price+"|"+item.total+"|"+item.prdID);
						trace(_origData.getItemAt(i).qty," != ",item.qty)
						if(_origData.getItemAt(i).qty != item.qty){
							item.qty=int(_origData.getItemAt(i).qty) -int(item.qty);
							item.isSelected=="0";
							dg.dataProvider.itemUpdated(item);
						}
							
					}
					i++;
				}
				obj.purOrdDetails = strItem.join("||");
				obj.pBox = this;
				trace("purOrdDetails", obj.purOrdDetails)
				 var log2:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.ADD_PURORD,obj)
				CairngormEventDispatcher.getInstance().dispatchEvent(log2); 
				//printPrevPO()
				//btnPrint.enabled = true;
			}
			
			public function setDateFormat(d:Date):String{
				var strDate:String="";
				//strDate = String(d.month+1)+"/"+d.date+"/"+d.fullYear;
				var mon:String = (d.month+1)<10?"0"+String(d.month+1):String(d.month+1);
				var dat:String = (d.date)<10?"0"+String(d.date):String(d.date);
				strDate = d.fullYear+"-"+mon+"-"+dat;
				return strDate;
			}
			
			public function updateCurrentPO():void{
				var item:Object;
				for (var i:int = (dg.dataProvider as ArrayCollection).length-1; i >=0 ; i--){
					item = (dg.dataProvider as ArrayCollection).getItemAt(i);
					if (item.isSelected=="1")
						(dg.dataProvider as ArrayCollection).removeItemAt(i);
					else{
						item.isSelected = "1";
						dg.dataProvider.itemUpdated(item);
					}
				}
				trace("(dg.dataProvider as ArrayCollection).length:",(dg.dataProvider as ArrayCollection).length)
				var num:int = 1;
				for each (var item:Object in dg.dataProvider){
					item.num = num;
					item.isSelected = "1";
					dg.dataProvider.itemUpdated(item);
					num++;
				}
				setDataProvider((dg.dataProvider as ArrayCollection),3);
				if ((dg.dataProvider as ArrayCollection).length==0){
					clearFields(null);
					mainCont.enabled = false;
					btnCheckOut.visible = btnCheckOut.includeInLayout = false;
					btnView.visible = btnView.includeInLayout = true;
					btnEdit.visible = btnEdit.includeInLayout = false;
					Alert.show("All Items are fully serve on Requisition No.:"+_tempData.reqNo,"Requisition Complete");
					var PO_renderer:PurchaseOrdRenderer;
					for (i=dgSearch.numElements-1; i >= 0; i-- ){
						PO_renderer = (dgSearch.getElementAt(i) as PurchaseOrdRenderer);
						if (PO_renderer.data == _tempData){
							dgSearch.removeElementAt(i);
							break;							
						}
					}
				}
					
				/*var log3:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.GET_PURORD_NUMBER,{qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log3);*/
			}
			
			protected function printPrevPO():void
			{
				/*var printJob:FlexPrintJob = new FlexPrintJob();
				if (printJob.start() != true) return;
				printJob.addObject(cont, FlexPrintJobScaleType.SHOW_ALL); 
				printJob.send();*/
				var _printBox:PrintPrevBox = new PrintPrevBox();
				_printBox.boxType = this;
				_printBox.orderTypeID = 0;
				_printBox.width = AccessVars.instance().mainApp.width-5;
				_printBox.height = AccessVars.instance().mainApp.height-5;
				PopUpManager.addPopUp(_printBox,this,true);
			}
			
			public function clearFields(event:MouseEvent):void{
				/* cmbQuote.selectedIndex = -1;
				cmbQuote.textInput.text = ""; */
				cmbProd.selectedIndex = -1;
				
				cmbProd.textInput.text = "";
				txtQty.textDisplay.text = "0";
				cmbSupplier.selectedIndex = -1;
				cmbDeliver.selectedIndex = 0;
				txtInvoice.text = "";
				txtPrice.text = "0.00";
				//txtStock.text = "0.00";
				txtSub.text = "0.00";
				txtSubtot.text = "0.00";
				txtGT.text = "0.00";
				txtVat.text = "0.00";
				numItems.text = "0";
				totWeight.text = "0";
				
				dg.dataProvider = null;
				_totalQty = 0;
			}
			
			protected function btnNewclickHandler(event:MouseEvent):void
			{
				if (dg.dataProvider != null){
					Alert.show("Are you sure to create a new Purchase Order?","Purchase Order not empty",Alert.YES|Alert.NO,null,newSalesHandler,null,Alert.NO);
				}else{
					_type = 0;
					mainCont.enabled = true;
					btnCheckOut.label = "Submit Purchase Order";
					btnCheckOut.visible = btnCheckOut.includeInLayout = true;
					btnEdit.visible = btnEdit.includeInLayout = false;
					clearFields(null);
					//btnPrint.enabled = false;
					var log3:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.GET_PURORD_NUMBER,{qBox:this})
					CairngormEventDispatcher.getInstance().dispatchEvent(log3);
				}
			}
			protected function editClickHandler(event:MouseEvent):void
			{
				_type = 0;
				//btnCheckOut.label = "Save Purchase Order Changes";
				btnView.visible = btnView.includeInLayout = true;
				btnCheckOut.visible = btnCheckOut.includeInLayout = true;
				mainCont.enabled = true;
			}
			
			private function newSalesHandler(event:CloseEvent):void{
				if (event.detail == Alert.YES){
					_type = 0;
					mainCont.enabled = true;
					btnCheckOut.label = "Submit Purchase Order";
					btnCheckOut.visible = btnCheckOut.includeInLayout = true;
					btnEdit.visible = btnEdit.includeInLayout = false;
					clearFields(null);
					//btnPrint.enabled = false;
					var log3:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.GET_PURORD_NUMBER,{qBox:this})
					CairngormEventDispatcher.getInstance().dispatchEvent(log3);
				}
			}
			
			protected function txtVat_keyUpHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.ENTER){
					txtGT.setFocus();
				}
			}
			
			protected function SearchClickHandler(event:MouseEvent):void
			{				
				for (var i:int =0; i < dgSearch.numElements; i++){
					(dgSearch.getElementAt(i) as PurchaseOrdRenderer).isSelected = false;
				}
				mainCont.enabled = false;
				clearFields(null);
				btnCheckOut.visible = btnCheckOut.includeInLayout = false;
				btnView.visible = btnView.includeInLayout = false;
				btnEdit.visible = btnEdit.includeInLayout = false;
				
				var log3:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.GET_PURORD_NUMBER,{qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log3);
				
				var log2:ItemsTransEvent = new ItemsTransEvent(ItemsTransEvent.SEARCH_PURORD,{searchstr:txtSearchStr.text,condition:"",qBox:this})
				CairngormEventDispatcher.getInstance().dispatchEvent(log2);
			}
						
			
			protected function dg_gridDoubleClickHandler(event:GridEvent):void
			{
				if (event.column.columnIndex == 2){
					event.grid.dataGrid.startItemEditorSession(event.rowIndex, event.columnIndex);
				}
			}
			
			private var prevQty:int = 1;
			protected function dg_gridItemEditorSessionStartHandler(event:GridItemEditorEvent):void
			{
				var item:Object = event.column.grid.dataGrid.selectedItem;
				prevQty = item.qty;
			}
			
			protected function dg_gridItemEditorSessionSave(event:GridItemEditorEvent):void
			{
				var item:Object = event.column.grid.dataGrid.selectedItem;
				if (item.qty <= 0){
					item.qty = prevQty;
					dg.dataProvider.itemUpdated(item);
					event.preventDefault();
					return;
				}
				item.total = roundDec(Number(item.qty * item.price)).toFixed(2)
				item.weight = Number(item.oWeight)*Number(item.qty)
				dg.dataProvider.itemUpdated(item);
				var subTot:Number = 0;
				var subTotWeight:Number = 0;
				var subTotQty:Number = 0;
				for each (var items:Object in dg.dataProvider){
					if (items.isSelected=="1"){
						subTot += Number(items.total);
						subTotWeight+=Number(items.weight);
						subTotQty+=Number(items.qty);
					}
				}
				txtSubtot.text = numFmttr.format(subTot);
				totWeight.text = String(subTotWeight);
				numItems.text = String(subTotQty);
				updateTotal();
			}
			
			public function reComputeHandler(obj:Object,isSelected:Boolean):void{
				if (isSelected){
					obj.isSelected = "1";
					addItemHandler(obj)
				}else{
					obj.isSelected = "0";
					removeItemHandler(obj);
				}
				dg.dataProvider.itemUpdated(obj);
			}
			public function addItemHandler(obj:Object):void{
				trace("subtotal:",Number(txtSubtot.text.replace(/\b,\b/g,"")),"total:",obj.total);
				txtSubtot.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))+ Number(obj.total));
				txtVat.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))*0.12);
				txtGT.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))+Number(txtVat.text.replace(/\b,\b/g,"")));
				_totalQty = Number(Number(numItems.text) + Number(obj.qty));
				totWeight.text = String(Number(totWeight.text) + Number(obj.weight));
				numItems.text = String(_totalQty);
			}
			
			public function removeItemHandler(obj:Object):void{
				txtSubtot.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))- Number(obj.total));
				txtVat.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))*0.12);
				txtGT.text = numFmttr.format(Number(txtSubtot.text.replace(/\b,\b/g,""))+Number(txtVat.text.replace(/\b,\b/g,"")));
				_totalQty = Number(Number(numItems.text) - Number(obj.qty));
				totWeight.text = String(Number(totWeight.text) - Number(obj.weight));
				numItems.text = String(_totalQty);
			}
			
			private function formatAmtTotal(item:Object, column:GridColumn):String{
				return numFmttr.format(item.total);
			}
			private function formatAmtPrice(item:Object, column:GridColumn):String{
				return numFmttr.format(item.price);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:NumberFormatter id="numFmttr" precision="2" useThousandsSeparator="true"  />
	</fx:Declarations>
	<!--<s:Label text="Purchase Order" fontWeight="bold" fontSize="18" fontStyle="italic"/>-->
	<s:HGroup width="25%" height="100%" minWidth="300" maxWidth="350" paddingBottom="5" paddingTop="5">
		<s:BorderContainer width="100%" height="100%" cornerRadius="10" borderStyle="inset">
			<s:layout>
				<s:VerticalLayout paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"/>
			</s:layout>
			<s:borderStroke> 
				<mx:SolidColorStroke 
					color="{AccessVars.instance().borderStrokeColor}" 
					weight="2"/> 
			</s:borderStroke> 
			<s:HGroup width="100%" horizontalAlign="left" verticalAlign="middle" height="30">
				<s:Label text="Search"/>
				<s:TextInput prompt="[Requisition No / Branch]" id="txtSearchStr" enter="SearchClickHandler(null)" width="90%"/>
				<s:Button label="Search" click="SearchClickHandler(event)"/>
			</s:HGroup>
			<s:HGroup width="100%" fontSize="14"  fontWeight="bold" gap="2">
				<s:Label text="Requisition No." width="45%" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5" color="{AccessVars.instance().headerFontColor}"/>
				<s:Label text="Branch" width="55%" backgroundColor="{AccessVars.instance().headerBgColor}" textAlign="center" paddingTop="5" paddingBottom="5" color="{AccessVars.instance().headerFontColor}"/>
			</s:HGroup>
			<s:Group width="100%" height="100%">
				<s:Scroller width="100%" height="100%">
					<s:VGroup id="dgSearch" gap="2" width="100%" height="100%" contentBackgroundAlpha="1" contentBackgroundColor="0xCCCCCC" clipAndEnableScrolling="true"/>
				</s:Scroller>
			</s:Group>
		</s:BorderContainer>
	</s:HGroup>
	<s:VGroup id="cont" minHeight="600" width="75%" height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5">
		<s:VGroup id="mainCont" width="100%" height="100%" enabled="false">
			<s:BorderContainer width="100%" height="100%" cornerRadius="10" borderStyle="inset">
				<s:borderStroke> 
					<mx:SolidColorStroke 
						color="{AccessVars.instance().borderStrokeColor}" 
						weight="2"/> 
				</s:borderStroke> 
				<s:HGroup  width="100%" height="100%" fontSize="16">					
					<s:HGroup width="50%" verticalAlign="top" height="100%" paddingBottom="10" paddingTop="10" paddingLeft="15" paddingRight="15">
						<s:Label text="Invoice To" width="90" textAlign="right"/>
						<s:TextArea id="txtInvoice" width="100%" height="90" keyUp="{txtInvoice.styleName = txtInvoice.text==''?'required':''}"/>
					</s:HGroup>
					<s:VGroup  width="50%" height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5">
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="PO No." width="60" textAlign="right"/>
							<s:TextInput id="txtReqNo" width="100%" editable="false"/>
							<s:Label text="Date" textAlign="center"/>
							<mx:DateField id="dfDate" width="150" showToday="true"/>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" visible="false" includeInLayout="false">
							<s:Label text="Item / Model No." width="115" textAlign="right"/>
							<s:ComboBox id="cmbProd" width="100%" tabIndex="2" change="cmbProdchangeHandler(event)"/>
						</s:HGroup>
						<s:HGroup  width="100%" verticalAlign="middle">
							<s:Label text="Supplier" width="60" textAlign="right"/>
							<s:DropDownList id="cmbSupplier" width="100%" prompt="[Select Supplier]" labelField="label"/>
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle" visible="false" includeInLayout="false">
							<s:Label text="Quantity" width="115" textAlign="right"/>
							<s:NumericStepper id="txtQty" width="150" value="0" textAlign="right" tabIndex="3" change="txtQtychangeHandler(event)"/>
							<s:TextInput id="txtPrice" width="150" text="0.00" textAlign="right" selectable="false" visible="false" includeInLayout="false"/>
							<s:Button id="btnAdd" label="Add  Order" tabIndex="4" click="btnAddclickHandler(event)" keyDown="btnAdd_keyUpHandler(event)"/>
							<s:Spacer width="35%"/>
							<s:Label text="Net Price"/>
							<mx:Text id="txtSub" width="100%" text="0.00" textAlign="right" />
						</s:HGroup>
						<s:HGroup width="100%" verticalAlign="middle">
							<s:Label text="Deliver To" width="60" textAlign="right"/>
							<s:DropDownList id="cmbDeliver" width="100%" labelField="label"/>
						</s:HGroup>
						
						<!--<s:HGroup width="100%" horizontalAlign="right" verticalAlign="bottom">
						<s:HGroup verticalAlign="middle" paddingLeft="10">
						<s:Label text="Stock:" backgroundColor="0xFCFCFC" fontWeight="bold"/>
						<mx:Text id="txtStock" text="0" textAlign="right" width="100" fontWeight="bold"/>
						</s:HGroup>
						<s:Spacer width="35%"/>
						<s:HGroup width="50%" fontSize="16" verticalAlign="middle">
						<s:Label text="Net Price:" width="90"/>
						<mx:Text id="txtSub" width="100%" text="0.00" textAlign="right" />
						</s:HGroup>
						</s:HGroup>-->
						
						
						
					</s:VGroup>
				</s:HGroup>
			</s:BorderContainer>
			<s:Spacer height="5"/>
			<s:DataGrid id="dg" width="100%" height="100%" minHeight="200" sortableColumns="false" textAlign="center" fontSize="12" editable="true"
						gridDoubleClick="dg_gridDoubleClickHandler(event)" doubleClickEnabled="true" gridItemEditorSessionSave="dg_gridItemEditorSessionSave(event)"
						gridItemEditorSessionStart="dg_gridItemEditorSessionStartHandler(event)">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn width="20" itemRenderer="com.module.renderer.IncludeItemRenderer" editable="false" headerRenderer="com.module.renderer.GridHeadRenderer"/>
						<s:GridColumn width="40" dataField="num" headerText="No." editable="false" headerRenderer="com.module.renderer.GridHeadRenderer"/>
						<s:GridColumn dataField="qty" headerText="Qty" width="40"  editable="true" headerRenderer="com.module.renderer.GridHeadRenderer"/>
						<s:GridColumn dataField="unit" headerText="Unit" width="40"  editable="false"/>
						<s:GridColumn dataField="modelNo" headerText="Item/Model No." width="120"  editable="false">
							<s:itemRenderer>
								<fx:Component>
									<s:DefaultGridItemRenderer textAlign="left"/>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						<s:GridColumn dataField="prodDesc" headerText="Description" editable="false" headerRenderer="com.module.renderer.GridHeadRenderer">
							<s:itemRenderer>
								<fx:Component>
									<s:DefaultGridItemRenderer textAlign="left"/>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						<s:GridColumn dataField="weight" headerText="WT" width="40"  editable="false" headerRenderer="com.module.renderer.GridHeadRenderer"/>
						<s:GridColumn dataField="price" headerText="Price" width="120"  editable="false" labelFunction="formatAmtPrice" headerRenderer="com.module.renderer.GridHeadRenderer">
							<s:itemRenderer>
								<fx:Component>
									<s:DefaultGridItemRenderer textAlign="right"/>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						<s:GridColumn dataField="total" headerText="Extend" width="120" editable="false" labelFunction="formatAmtTotal" headerRenderer="com.module.renderer.GridHeadRenderer">
							<s:itemRenderer>
								<fx:Component>
									<s:DefaultGridItemRenderer textAlign="right" fontSize="14"/>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<s:HGroup width="100%" verticalAlign="bottom" fontSize="14" paddingTop="3" paddingBottom="3">
				<s:Label text="Number of Items: "/>
				<s:Label id="numItems" text="0"/>
				<s:Spacer width="50%"/>
				<s:HGroup width="230" height="100%" paddingTop="2" paddingLeft="2" fontWeight="bold">
					<s:Spacer width="100%"/>
					<s:Label text="Total Weight: "/>
					<s:Label id="totWeight" text="0"/>
					<s:Label text="kg"/>
				</s:HGroup>
				<s:VGroup width="50%">
					<s:HGroup width="100%">
						<s:Label text="Subtotal" width="90"/>
						<mx:Text id="txtSubtot" width="100%" text="0.00" textAlign="right"/>
					</s:HGroup>
					<s:HGroup width="100%">
						<s:Label text="VAT" width="90"/>
						<s:TextInput id="txtVat" width="100%" text="0.00" textAlign="right" borderVisible="false" restrict="0-9." focusOut="{updateTotal(false)}" keyUp="txtVat_keyUpHandler(event)"/>
					</s:HGroup>
					<s:HGroup width="100%">
						<s:Label text="TOTAL" fontSize="16"/>
						<s:Label id="txtGT" textAlign="right" text="0.00" fontSize="18" width="100%" />
					</s:HGroup>
				</s:VGroup>
			</s:HGroup>
		</s:VGroup>		
		<mx:HRule height="5" width="100%"/>
		<s:HGroup id="hgControl" width="100%" height="100%" paddingBottom="5" paddingTop="5" paddingLeft="5" paddingRight="5"
				  horizontalAlign="left" verticalAlign="top">						
			<s:Button id="btnCheckOut" label="Submit Purchase Order" click="CheckOutclickHandler(event)" visible="false" includeInLayout="false"/>
			<s:Spacer width="100%"/>
			<!--<s:Button id="btnNew"  label="New Purchase Order" click="btnNewclickHandler(event)"/>-->
			<s:Button id="btnEdit"  label="Edit Purchase Order" click="editClickHandler(event)" visible="false" includeInLayout="false"/>
			<s:Button id="btnView"  label="View Purchase Order" click="printPrevPO()" visible="false" includeInLayout="false"/>
		</s:HGroup>
	</s:VGroup>
</s:HGroup>
