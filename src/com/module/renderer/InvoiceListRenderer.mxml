<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" horizontalCenter="0" creationComplete="creationCompleteHandler(event)"
					xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="22"
					xmlns:mx="library://ns.adobe.com/flex/mx" clipAndEnableScrolling="true">
	
	<fx:Script>
		<![CDATA[
			import com.variables.AccessVars;
			
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			
			import spark.components.DataGrid;
			import spark.events.IndexChangeEvent;
			override public function prepare(hasBeenRecycled:Boolean):void {
				cmbInvoice.dataProvider = AccessVars.instance().invoiceList;
				cmbInvoice.selectedIndex = -1
					
				/*if (data) 
					trace("prepare", data.invID, data.acctNo)*/
				acctNo.visible = acctNo.includeInLayout = false;
				cmbInvoice.visible = cmbInvoice.includeInLayout = true;
				
				if (data && data.invID != "" && data.invID != undefined){					
					for each(var item:Object in AccessVars.instance().invoiceList){
						if (item.invID == data.invID){
							cmbInvoice.selectedItem = item;
							break;
						}
					}
				}else if (data && data.acctNo != "" && data.acctNo != undefined){
					//trace("prepare: acctNo_", data.invID, data.acctNo)
					acctNo.text = data.acctNo;
					acctNo.visible = acctNo.includeInLayout = true;
					cmbInvoice.visible = cmbInvoice.includeInLayout = false;
					
				}else{
					cmbInvoice.selectedIndex =-1;
					
				}
				
			}
			
			
			protected function cmbRemarks_changeHandler(event:IndexChangeEvent):void
			{
				data.invID = cmbInvoice.selectedItem.invID;
				data.credit = "0.00";
				data.totalAmt = "0.00";
				data.amt = cmbInvoice.selectedItem.totalAmt;
				data.tempAcctNo = cmbInvoice.selectedItem.invIDLabel;
				var dg:DataGrid = (parent.parent.parent.parent.parent.parent.parent.parent.parent as DataGrid);
				
				dg.dataProvider.itemUpdated(data);
				dg.dispatchEvent(new PropertyChangeEvent(PropertyChangeEvent.PROPERTY_CHANGE));
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				if (AccessVars.instance().invoiceList && AccessVars.instance().invoiceList.length == 0){
					var dg:DataGrid = (parent.parent.parent.parent.parent.parent.parent.parent.parent as DataGrid);
					if (dg.dataProvider)
						dg.dataProvider.removeAll();
					dg.dataProvider = null;
					return;
				}
				acctNo.visible = acctNo.includeInLayout = false;
				cmbInvoice.visible = cmbInvoice.includeInLayout = true;
				
				if (data) 
					trace("creationCompleteHandler", data.invID, data.acctNo)
				acctNo.visible = acctNo.includeInLayout = false;
				cmbInvoice.visible = cmbInvoice.includeInLayout = true;
				
				if (data && data.invID != "" && data.invID != undefined){					
					for each(var item:Object in AccessVars.instance().invoiceList){
						if (item.invID == data.invID){
							cmbInvoice.selectedItem = item;
							break;
						}
					}
				}else if (data && data.acctNo != "" && data.acctNo != undefined){
					trace("creationCompleteHandler: acctNo_", data.invID, data.acctNo)
					acctNo.text = data.acctNo;
					acctNo.visible = acctNo.includeInLayout = true;
					cmbInvoice.visible = cmbInvoice.includeInLayout = false;
					
				}else{
					cmbInvoice.selectedIndex =-1;
					
				}
				
			}
			
		]]>
	</fx:Script>
	<s:HGroup width="95%" height="100%" horizontalAlign="center" verticalAlign="middle" paddingLeft="5" paddingRight="2">
		<s:DropDownList id="cmbInvoice" width="100%" labelField="invIDLabel" change="cmbRemarks_changeHandler(event)"/>
		<s:Label id="acctNo" width="100%" visible="false" includeInLayout="false"/>
	</s:HGroup>	
</s:GridItemRenderer>
